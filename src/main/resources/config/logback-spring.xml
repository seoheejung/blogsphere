<?xml version="1.0" encoding="UTF-8"?>
<!-- 60초마다 설정파일 변경 확인하여 변경 시 갱신 -->
<configuration scan="true" scanPeriod="60 seconds">

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
	<!-- profile별 설정 -->
	<springProfile name="local">
		<property resource="../application.properties" />
	</springProfile>
	
    <!-- log file path --> 
    <property name="LOG_PATH" value="blogsphereLog"/>
    
    <!-- log file name --> 
    <property name="LOG_FILE_NAME" value="logback"/> 
    <!-- log level --> 
    <property name="LOG_LEVEL" value="INFO"/> 
	
	<!-- Console Appender -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<!-- [날짜:시간][스레드] 로그레벨 - 로그메시지 -->
			<Pattern>%d{yyyy-MM-dd HH:mm:ss}: [%thread] %clr(%-5level) %clr(%-40.40logger{39}){cyan} - %msg%n</Pattern>
		</layout>
	</appender>

    <!-- Console Infolog Appender -->
    <appender name="CONSOLE-INFOLOG" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <charset>UTF-8</charset>
            <Pattern>%d %5p %m%n</Pattern>
        </encoder>
    </appender>

	
	<!-- File Appender --> 
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
        <!-- 파일경로 설정 --> 
        <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file> 
        <!-- 출력패턴 설정--> 
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
            <pattern>%d{yyyy-MM-dd HH:mm:ss}:[%thread] %-5level - %msg%n</pattern> 
        </encoder> 
        <!-- Rolling 정책 --> 
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
            <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 --> 
            <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern> 
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
                <!-- 파일당 최고 용량 kb, mb, gb --> 
                <maxFileSize>100MB</maxFileSize> 
            </timeBasedFileNamingAndTriggeringPolicy> 
            <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거--> 
        </rollingPolicy> 
    </appender> 
	
    <!-- SQL문만 출력. PreparedStatement인 경우 관련된 값을 포함하여 출력 --> 
    <logger name="jdbc.sqlonly"          level="INFO" appender-ref="console-infolog"/>
    <logger name="jdbc.sqltiming"        level="OFF" />
    <logger name="jdbc.audit"            level="OFF" />
    <logger name="jdbc.resultset"        level="OFF" />
    <logger name="jdbc.resultsettable"   level="OFF" />
    <logger name="jdbc.connection"       level="OFF" />


    <!-- root레벨 설정(TRACE < DEBUG < INFO < WARN < ERROR) --> 
    <root level="${LOG_LEVEL}" additivity="false">  
        <appender-ref ref="CONSOLE"/> 
        <appender-ref ref="FILE"/> 
    </root> 


</configuration>